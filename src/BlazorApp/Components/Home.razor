<section class="dark" id="home">
    @if (backgroundImage is not null)
    {   
        <img class="background img-fluid" src="@(backgroundImage.Src)" alt="@(backgroundImage.Alt)" /> 
    }

    @if (property is null)
    {
        <p><em>Loading...</em></p>
    }
    else if(!(property is null) && !(kathryn is null))
    {
        <div class="container text-center" style="margin-top: 18rem;">
            <div class="row align-items-center justify-content-center">
                <div class="col-md-6 order-md-2 mb-4 mb-md-0">
                    <img class="kathryn rounded-circle img-fluid" src="@(kathryn.Src)" alt="@(kathryn.Alt)" />
                </div>
                <div class="col-md-6 order-md-1">
                    <h1>@property.Name</h1>
                    <h2>@property.Title</h2>
                    <a class="btn btn-secondary btn-lg mt-4" href="mailto:@(property.Email)" role="button">Contact me</a>
                </div>
            </div>
        </div>
    }
    
    <div class="text-center mt-5">
        <a href="#about" target="_top">
            <img src="images/down-arrow.svg" style="height: 3rem; width: 3rem; margin: 1rem;" alt="scroll down" />
        </a>
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required ImageService ImageService { get; set; }

    private SiteProperties? property;
    private Image? kathryn;
    private Image? backgroundImage;

    protected override async Task OnInitializedAsync()
    {
        property = await Http.GetFromJsonAsync<SiteProperties>("sample-data/siteproperties.json");
        kathryn = await ImageService.GetPictureAsync(img => img.Name is "kathryn-headshot");
        backgroundImage = await ImageService.GetPictureAsync(img => img.Name is "home-background");
    }
}